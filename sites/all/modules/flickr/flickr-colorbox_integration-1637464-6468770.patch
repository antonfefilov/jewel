diff --git a/778628-migration-to-drupal-7-34.patch b/778628-migration-to-drupal-7-34.patch
deleted file mode 100644
index f3c11e9..0000000
--- a/778628-migration-to-drupal-7-34.patch
+++ /dev/null
@@ -1,627 +0,0 @@
-diff --git a/field/flickrfield.info b/field/flickrfield.info
-index 4ab5ea0..357213e 100644
---- a/field/flickrfield.info
-+++ b/field/flickrfield.info
-@@ -1,6 +1,9 @@
- name = Flickrfield
- description = Flickr CCK field to insert Flickr images into content.
-+core = 7.x
-+
-+dependencies[] = field
- dependencies[] = flickr
--dependencies[] = content
--package = CCK
--core = 6.x
-+
-+files[] = flickrfield.install
-+files[] = flickrfield.module
-\ No newline at end of file
-diff --git a/field/flickrfield.install b/field/flickrfield.install
-deleted file mode 100644
-index 69a94a8..0000000
---- a/field/flickrfield.install
-+++ /dev/null
-@@ -1,36 +0,0 @@
--<?php
--/**
-- * Implementation of hook_install().
-- */
--function flickrfield_install() {
--  drupal_load('module', 'content');
--  content_notify('install', 'flickrfield');
--}
--
--/**
-- * Implementation of hook_uninstall().
-- */
--function flickrfield_uninstall() {
--  drupal_load('module', 'content');
--  content_notify('uninstall', 'flickrfield');
--}
--
--/**
-- * Implementation of hook_enable().
-- *
-- * Notify content module when this module is enabled.
-- */
--function flickrfield_enable() {
--  drupal_load('module', 'content');
--  content_notify('enable', 'flickrfield');
--}
--
--/**
-- * Implementation of hook_disable().
-- *
-- * Notify content module when this module is disabled.
-- */
--function flickrfield_disable() {
--  drupal_load('module', 'content');
--  content_notify('disable', 'flickrfield');
--}
-diff --git a/field/flickrfield.module b/field/flickrfield.module
-index bea26cf..d0cc846 100644
---- a/field/flickrfield.module
-+++ b/field/flickrfield.module
-@@ -11,11 +11,11 @@
-  * Include css unconditionally.
-  */
- function flickrfield_init() {
--  drupal_add_css(drupal_get_path('module', 'flickr') .'/flickr.css');
-+  drupal_add_css(drupal_get_path('module', 'flickr') . '/flickr.css');
- }
- 
- /**
-- * Implementation of hook_help().
-+ * Implements hook_help().
-  */
- function flickrfield_help($section, $arg) {
-   switch ($section) {
-@@ -25,91 +25,104 @@ function flickrfield_help($section, $arg) {
- }
- 
- /**
-- * Implementation of hook_field_info().
-+ * Implements hook_field_info().
-  */
- function flickrfield_field_info() {
-+  $sizes = array_keys(flickr_photo_sizes());
-   return array(
-     'flickrfield' => array(
-       'label' => 'Flickr Photo',
-       'description' => t('Store Flickr Photo or Photoset ids and display the photos in nodes and views.'),
-+  		'default_widget' => 'flickrfield',
-+  		'default_formatter' => $sizes[0],
-     ),
-     'flickrfield_photoset' => array(
-       'label' => 'Flickr photo set',
-       'description' => t('Field for storing a reference to a Flickr photo set.'),
--    )
-+  		'default_widget' => 'flickrfield_flickrid',
-+  		'default_formatter' => 'photoset_primaryphoto_size' . $sizes[0] . '_nolink',
-+    ),
-   );
- }
- 
- /**
-- * Implementation of hook_field_settings().
-+ * Implements hook_field_schema().
-  */
--function flickrfield_field_settings($op, $field) {
--  switch ($op) {
--    case 'database columns':
--      if ($field['type'] == 'flickrfield') {
--      $columns = array(
--        'id' => array('type' => 'varchar', 'length' => 64, 'not null' => FALSE, 'sortable' => TRUE),
--        'type' => array('type' => 'varchar', 'length' => 10, 'not null' => FALSE, 'sortable' => TRUE),
--        'nsid' => array('type' => 'varchar', 'length' => 64, 'not null' => FALSE, 'sortable' => TRUE),
--      );
--      }
--      else if ($field['type'] == 'flickrfield_photoset') {
--        $columns = array(
--          'flickrid' => array('type' => 'varchar', 'length' => 64, 'not null' => FALSE, 'sortable' => TRUE),
--        );
--      }
--      return $columns;
-+function flickrfield_field_schema($field) {
-+  if ($field['type'] == 'flickrfield') {
-+  $columns = array(
-+    'id' => array('type' => 'varchar', 'length' => 64, 'not null' => FALSE, 'sortable' => TRUE),
-+    'type' => array('type' => 'varchar', 'length' => 10, 'not null' => FALSE, 'sortable' => TRUE),
-+    'nsid' => array('type' => 'varchar', 'length' => 64, 'not null' => FALSE, 'sortable' => TRUE),
-+  );
-   }
-+  else if ($field['type'] == 'flickrfield_photoset') {
-+    $columns = array(
-+      'flickrid' => array('type' => 'varchar', 'length' => 64, 'not null' => FALSE, 'sortable' => TRUE),
-+    );
-+  }
-+  return array('columns' => $columns);
- }
- 
- /**
-- * Implementation of hook_widget_info().
-+ * Implements hook_widget_info().
-  */
--function flickrfield_widget_info() {
-+function flickrfield_field_widget_info() {
-   return array(
-     'flickrfield' => array(
-       'label' => 'Flickr Photo',
-       'field types' => array('flickrfield'),
--      'multiple values' => CONTENT_HANDLE_CORE,
--      'callbacks' => array(
--        'default value' => CONTENT_CALLBACK_DEFAULT,
--      ),
-+  		'behaviors' => array(
-+  			'multiple values' => FIELD_BEHAVIOR_DEFAULT,
-+        'default value' => FIELD_BEHAVIOR_DEFAULT,
-+  		),
-     ),
-     'flickrfield_flickrid' => array(
-       'label' => 'Flickr Id',
-       'field types' => array('flickrfield_photoset'),
--      'multiple values' => CONTENT_HANDLE_CORE,
--      'callbacks' => array(
--        'default value' => CONTENT_CALLBACK_DEFAULT,
--      ),
--    )
-+  		'behaviors' => array(
-+  			'multiple values' => FIELD_BEHAVIOR_DEFAULT,
-+        'default value' => FIELD_BEHAVIOR_DEFAULT,
-+  		),
-+    ),
-   );
- }
- 
--function flickrfield_elements() {
-+/**
-+ * Implements hook_elements_info().
-+ */
-+function flickrfield_element_info() {
-   return array(
-     'flickrfield' => array(
-       '#input' => TRUE,
-       '#columns' => array('type', 'id', 'uid'),
--      '#process' => array('flickrfield_process'),
-+      '#process' => array('flickrfield_form_process_flickrfield'),
-+  		//'#theme' => array('theme_flickrfield'),
-     ),
-     'flickrfield_flickrid' => array(
-       '#input' => TRUE,
-       '#columns' => array('flickrid'),
--      '#process' => array('flickrfield_flickrid_process'),
--    )
-+      '#process' => array('flickrfield_form_process_flickrfield_flickrid'),
-+  		//'#theme' => array('theme_flickrfield_flickrid'),
-+    ),
-   );
- }
- 
--function flickrfield_widget(&$form, &$form_state, $field, $items, $delta = 0) {
--  $element = array(
--    '#type' => $field['widget']['type'],
-+/**
-+ * Implements hook_field_widget_form().
-+ */
-+function flickrfield_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
-+	$element = array(
-+    '#type' => $instance['widget']['type'],
-     '#default_value' => isset($items[$delta]) ? $items[$delta] : '',
-   );
-   return $element;
- }
- 
--function flickrfield_process($element, $edit, $form_state, $form) {
-+/**
-+ * Form process callback for flickr photo fields.
-+ */
-+function flickrfield_form_process_flickrfield($element, $form_state, $form = array()) {
-   $options = array();
-   $options['photo_id'] = t("Photo");
-   $options['set_id'] = t("Photoset");
-@@ -121,7 +134,7 @@ function flickrfield_process($element, $edit, $form_state, $form) {
-   );
-   $element['id'] = array(
-     '#type' => 'textfield',
--    '#title' => t('Id'),
-+    '#title' => t('Item id'),
-     '#default_value' => !empty($element['#value']['id']) ? $element['#value']['id'] : '',
-   );
-   $element['nsid'] = array(
-@@ -134,56 +147,61 @@ function flickrfield_process($element, $edit, $form_state, $form) {
-   return $element;
- }
- 
--function flickrfield_flickrid_process($element, $edit, $form_state, $form) {
-+/**
-+ * Form process callback for flickr photoset fields.
-+ */
-+function flickrfield_form_process_flickrfield_flickrid($element, $form_state, $form) {
-   $element['flickrid'] = array(
-     '#type' => 'textfield',
--    '#title' => $element['#title'],
--    '#description' => $element['#description'],
--    '#required' => $element['#required'],
-+    '#title' => !empty($element['#title']) ? $element['#title'] : '',
-+    '#description' => !empty($element['#description']) ? $element['#description'] : '',
-+    '#required' => FALSE || $element['#required'],
-     '#field_prefix' => t('Flickr ID: '),
-     '#default_value' => !empty($element['#value']['flickrid']) ? $element['#value']['flickrid'] : '',
-     '#size' => 20,
-     '#maxlength' => 20,
--    '#attributes' => array('class' => 'flickrfield_flickrid'),
-+    '#attributes' => array('class' => array('flickrfield_flickrid')),
-   );
-   return $element;
- }
- 
- /**
-- * Implementation of hook_content_is_empty().
-+ * Implements hook_content_is_empty().
-  */
--function flickrfield_content_is_empty($item, $field) {
-+function flickrfield_field_is_empty($item, $field) {
-   if ($field['type'] == 'flickrfield') {
--  return empty($item['id']);
--  } else if ($field['type'] == 'flickrfield_photoset') {
-+    return empty($item['id']);
-+  }
-+  else if ($field['type'] == 'flickrfield_photoset') {
-     return empty($item['flickrid']);
-   }
- }
- 
- /**
-- * Implementation of hook_field_formatter_info().
-+ * Implements hook_field_formatter_info().
-  */
- function flickrfield_field_formatter_info() {
--  require_once(drupal_get_path('module', 'flickr') .'/flickr.inc');
-+  require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'flickr') . '/flickr.inc';
-   $sizes = flickr_photo_sizes();
-   // Formatters for general Flickr CCK field.
-   foreach ($sizes as $size => $info) {
-     $formatters[$size] = array(
-       'label' => $info['label'],
-       'field types' => array('flickrfield'),
--      );
-+    );
-   }
--  // Formatters for Flickr photoset CCK field.
-+  
-+  // Formatters for Flickr photoset field.
-   foreach ($sizes as $size => $info) {
--    $formatters['photoset_primaryphoto_size'. $size .'_nolink'] = array(
-+    $formatters['photoset_primaryphoto_size' . $size . '_nolink'] = array(
-       'label' => t('Primary set photo at size "@size"', array('@size' => $info['label'])),
-       'field types' => array('flickrfield_photoset'),
-     );
--    $formatters['photoset_primaryphoto_size'. $size .'_linknode'] = array(
-+    $formatters['photoset_primaryphoto_size' . $size . '_linknode'] = array(
-       'label' => t('Primary set photo at size "@size" with link to node', array('@size' => $info['label'])),
-       'field types' => array('flickrfield_photoset'),
-     );
--    $formatters['photoset_primaryphoto_size'. $size .'_linkflickrcomset'] = array(
-+    $formatters['photoset_primaryphoto_size' . $size . '_linkflickrcomset'] = array(
-       'label' => t('Primary set photo at size "@size" with link to set on Flickr.com', array('@size' => $info['label'])),
-       'field types' => array('flickrfield_photoset'),
-     );
-@@ -200,51 +218,73 @@ function flickrfield_field_formatter_info() {
- }
- 
- /**
-- * Implementation of hook_theme().
-+ * Implements hook_field_formatter_view().
-+ * @todo: the theme definitions for our field-formatters should be removed from flickrfield_theme() and implemented here
-+ * @see http://drupal.org/node/728792 (section "Changed! Hook Formatter")
-+ */
-+function flickrfield_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
-+	$element = array();
-+	$sizes = array_keys(flickr_photo_sizes());
-+	foreach ($items as $delta => $item) {
-+		$variables = array(
-+			'#node' => $entity,
-+			'#item' => $item,
-+			'#formatter' => $display['type'], 
-+			'#field_name' => $field['field_name'],
-+		);
-+		$element[$delta]['#markup'] = theme('flickrfield_formatter_' . $display['type'], $variables);
-+	}
-+  return $element;
-+}
-+
-+/**
-+ * Implements hook_theme().
-+ * @todo: the theme definitions for our field-formatters should go in flickrfield_field_formatter_view()
-+ * @see http://drupal.org/node/728792 (section "Changed! Hook Formatter")
-  */
- function flickrfield_theme() {
--  require_once(drupal_get_path('module', 'flickr') .'/flickr.inc');
-+  require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'flickr') . '/flickr.inc';
-   $themes = array();
-   foreach (flickr_photo_sizes() as $size => $info) {
--    $themes['flickrfield_formatter_'. $size] = array(
--      'arguments' => array('element'),
-+    $themes['flickrfield_formatter_' . $size] = array(
-+      'variables' => array('element'),
-       'function' => 'theme_flickrfield_field_formatter',
--      );
-+    );
-     // Theme function for the primary photo formatters of a Flickr photo set.
--    $themes['flickrfield_formatter_photoset_primaryphoto_size'. $size .'_nolink'] = array(
--      'arguments' => array('element'),
-+    $themes['flickrfield_formatter_photoset_primaryphoto_size' . $size . '_nolink'] = array(
-+      'variables' => array('element'),
-       'function' => 'theme_flickrfield_formatter_photoset_primaryphoto',
-     );
--    $themes['flickrfield_formatter_photoset_primaryphoto_size'. $size .'_linknode'] = array(
--      'arguments' => array('element'),
-+    $themes['flickrfield_formatter_photoset_primaryphoto_size' . $size . '_linknode'] = array(
-+      'variables' => array('element'),
-       'function' => 'theme_flickrfield_formatter_photoset_primaryphoto',
-     );
--    $themes['flickrfield_formatter_photoset_primaryphoto_size'. $size .'_linkflickrcomset'] = array(
--      'arguments' => array('element'),
-+    $themes['flickrfield_formatter_photoset_primaryphoto_size' . $size . '_linkflickrcomset'] = array(
-+      'variables' => array('element'),
-       'function' => 'theme_flickrfield_formatter_photoset_primaryphoto',
-     );
-   }
-   return $themes + array(
-     'flickrfield_photo' => array(
--      'arguments' => array('img', 'photo_url', 'formatter', 'photo_data', 'node'),
-+      'variables' => array('img', 'photo_url', 'formatter', 'photo_data', 'node'),
-     ),
-     'flickrfield_photoset' => array(
--      'arguments' => array('img', 'photo_url', 'formatter', 'photo_data', 'node'),
-+      'variables' => array('img', 'photo_url', 'formatter', 'photo_data', 'node'),
-     ),
-     'flickrfield' => array(
--      'arguments' => array('element'),
-+      'variables' => array('element'),
-     ),
-     'flickrfield_flickrid' => array(
--      'arguments' => array('element'),
-+      'variables' => array('element'),
-     ),
-     'flickrfield_photoset_primaryphoto' => array(
--      'arguments' => array('element'),
-+      'variables' => array('element'),
-     ),
-     'flickrfield_formatter_photoset_flickrcomslideshow' => array(
--      'arguments' => array('element'),
-+      'variables' => array('element'),
-     ),
-     'flickrfield_formatter_photoset_flickrcomsetlink' => array(
--      'arguments' => array('element'),
-+      'variables' => array('element'),
-     ),
-   );
- }
-@@ -253,7 +293,7 @@ function flickrfield_theme() {
-  * Basic flickrfield formatter.
-  */
- function theme_flickrfield_field_formatter($element) {
--  require_once(drupal_get_path('module', 'flickr') .'/flickr.inc');
-+  require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'flickr') . '/flickr.inc';
-   $item = $element['#item'];
-   if (empty($item['id'])) {
-     return;
-@@ -266,12 +306,12 @@ function theme_flickrfield_field_formatter($element) {
-       $photo_data = flickr_photo_get_info($item['id']);
-       $img = flickr_img($photo_data, $formatter);
-       $photo_url = flickr_photo_page_url($photo_data['owner'], $photo_data['id']);
--      return theme('flickrfield_photo', $img, $photo_url, $formatter, $photo_data, $node);
-+      return theme('flickrfield_photo', array('0' => $img, '1' => $photo_url, '2' => $formatter, '3' => $photo_data, '4' => $node));
-     case 'set_id':
-       $photo_data = flickr_photoset_get_info($item['id']);
-       $img = flickr_img($photo_data, $formatter);
-       $photo_url = flickr_photoset_page_url($photo_data['owner'], $photo_data['id']);
--      return theme('flickrfield_photoset', $img, $photo_url, $formatter, $photo_data, $node);
-+      return theme('flickrfield_photoset', array('0' => $img, '1' => $photo_url, '2' => $formatter, '3' => $photo_data, '4' => $node));
-   }
- }
- 
-@@ -279,7 +319,7 @@ function theme_flickrfield_field_formatter($element) {
-  * Theme a Flickr photo set as the primary photo of that set.
-  */
- function theme_flickrfield_formatter_photoset_primaryphoto($element) {
--  require_once(drupal_get_path('module', 'flickr') .'/flickr.inc');
-+  require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'flickr') . '/flickr.inc';
-   if (empty($element['#item']['flickrid'])) {
-     return;
-   }
-@@ -290,7 +330,7 @@ function theme_flickrfield_formatter_photoset_primaryphoto($element) {
-   $img = flickr_img($set_data, $size);
-   switch ($formatter_info[3]) {
-     case 'linknode':
--      $link = 'node/'. $element['#node']->nid;
-+      $link = 'node/' . $element['#node']->nid;
-       break;
-     case 'linkflickrcomset':
-       $link = $set_url;
-@@ -299,31 +339,32 @@ function theme_flickrfield_formatter_photoset_primaryphoto($element) {
-       $link = NULL;
-       break;
-   }
--  $title = is_array($photo_data['title']) ? $photo_data['title']['_content'] : $photo_data['title'];
-+  $title = is_array($set_data['title']) ? $set_data['title']['_content'] : $set_data['title'];
- 
--  return theme('flickrfield_photoset_primaryphoto', $img, $link, $set_url, $size, $title);
-+  $vars = array($img, $link, $set_url, $size, $title);
-+  return theme('flickrfield_photoset_primaryphoto', $vars);
- }
- 
- /**
-  * Theme a Flickr photo set as an embedded Flickr.com flash slideshow.
-  */
--function theme_flickrfield_formatter_photoset_flickrcomslideshow($element) {
--  require_once(drupal_get_path('module', 'flickr') .'/flickr.inc');
--  if (empty($element['#item']['flickrid'])) {
-+function theme_flickrfield_formatter_photoset_flickrcomslideshow($variables) {
-+  require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'flickr') . '/flickr.inc';
-+  if (empty($variables['#item']['flickrid'])) {
-     return;
-   }
--  $set_id = $element['#item']['flickrid'];
--  $src = 'http://www.flickr.com/slideShow/index.gne?set_id='. $set_id;
-+  $set_id = $variables['#item']['flickrid'];
-+  $src = 'http://www.flickr.com/slideShow/index.gne?set_id=' . $set_id;
-   return '<div class="flickr-photoset-slideshow">'
--    .'<iframe align="center" src="' . $src .'" frameBorder="0" width="500" scrolling="no" height="500"></iframe>'
--    .'</div>';
-+    . '<iframe align="center" src="' . $src . '" frameBorder="0" width="500" scrolling="no" height="500"></iframe>'
-+    . '</div>';
- }
- 
- /**
-  * Theme a Flickr photo set as a simple link to the photo set page on Flickr.com.
-  */
--function theme_flickrfield_formatter_photoset_flickrcomsetlink($element) {
--  $set_data = flickr_photoset_get_info($element['#item']['flickrid']);
-+function theme_flickrfield_formatter_photoset_flickrcomsetlink($variables) {
-+  $set_data = flickr_photoset_get_info($variables['#item']['flickrid']);
-   $set_url = flickr_photoset_page_url($set_data['owner'], $set_data['id']);
-   return l($set_url, $set_url);
- }
-@@ -335,51 +376,67 @@ function theme_flickrfield_formatter_photoset_flickrcomsetlink($element) {
-  * otherwise just display the image. To comply with Flickr terms of service
-  * add a link back to the Flickr page.
-  */
--function theme_flickrfield_photo($img, $photo_url, $formatter, $photo_data, $node) {
-+function theme_flickrfield_photo($variables) {
-+  $img = $variables['0'];
-+  $photo_url = $variables['1'];
-+  $formatter = $variables['2'];
-+  $photo_data = $variables['3'];
-+  $node = $variables['4'];
-   $title = is_array($photo_data['title']) ? $photo_data['title']['_content'] : $photo_data['title'];
-   if (arg(0) == 'node' && arg(1) == $node->nid) {
--    $output = '<div class="flickr-photo-img">'. $img .'</div>';
-+    $output = '<div class="flickr-photo-img">' . $img . '</div>';
-   }
-   else {
--    $output = '<div class="flickr-photo-img">'. l($img, 'node/'. $node->nid, array('attributes' => array('title' => $title), 'absolute' => TRUE, 'html' => TRUE)) . '</div>';
-+    $output = '<div class="flickr-photo-img">' . l($img, 'node/' . $node->nid, array('attributes' => array('title' => $title), 'absolute' => TRUE, 'html' => TRUE)) . '</div>';
-   }
--  $output .= '<div class="flickr-citation"><cite>'. l(t('Source: Flickr'), $photo_url) .'</cite></div>';
-+  $output .= '<div class="flickr-citation"><cite>' . l(t('Source: Flickr'), $photo_url) . '</cite></div>';
-   return $output;
- }
- 
--function theme_flickrfield_photoset($img, $photo_url, $formatter, $photo_data, $node) {
-+/**
-+ * Theme function for showing a photo set.
-+ */
-+function theme_flickrfield_photoset($variables) {
-+  $img = $variables['0'];
-+  $photo_url = $variables['1'];
-+  $formatter = $variables['2'];
-+  $photo_data = $variables['3'];
-+  $node = $variables['4'];
-   $output = '<div class="flickr-photoset">';
- 
-   if (module_exists('flickr_sets')) {
-     $photos = flickr_set_load($photo_data['id']);
--    
-+
-     foreach ((array) $photos['photoset']['photo'] as $photo) {
--    //insert owner into $photo because theme_flickr_photo needs it
--    $photo['owner'] = $photos['photoset']['owner'];
--    $title = is_array($photo['title']) ? $photo['title']['_content'] : $photo['title'];
--    $img = flickr_img($photo, $formatter);
--    $original = flickr_photo_img($photo);
-+      //insert owner into $photo because theme_flickr_photo needs it
-+      $photo['owner'] = $photos['photoset']['owner'];
-+      $title = is_array($photo['title']) ? $photo['title']['_content'] : $photo['title'];
-+      $img = flickr_img($photo, $formatter);
-+      $original = flickr_photo_img($photo);
- 
-       if (arg(0) == 'node' && arg(1) == $node->nid) {
--        $output .= '<div class="flickr-photoset-img flickr-photoset-img-'. $formatter .'">'. l($img, $original, array('attributes' => array('title' => $title), 'absolute' => TRUE, 'html' => TRUE)) .'</div>';
--      } else {
--      $output .= '<div class="flickr-photoset-img flickr-photoset-img-'. $formatter .'">'. l($img, 'node/'. $node->nid, array('attributes' => array('title' => $title), 'absolute' => TRUE, 'html' => TRUE)) . '</div>';
-+        $output .= '<div class="flickr-photoset-img flickr-photoset-img-' . $formatter . '">' . l($img, $original, array('attributes' => array('title' => $title), 'absolute' => TRUE, 'html' => TRUE)) . '</div>';
-+      }
-+      else {
-+        $output .= '<div class="flickr-photoset-img flickr-photoset-img-' . $formatter . '">' . l($img, 'node/' . $node->nid, array('attributes' => array('title' => $title), 'absolute' => TRUE, 'html' => TRUE)) . '</div>';
-       }
-     }
--  } else {
-+  }
-+  else {
-     $title = is_array($photo_data['title']) ? $photo_data['title']['_content'] : $photo_data['title'];
--    
-+
-     if (arg(0) == 'node' && arg(1) == $node->nid) {
--      $output .= '<div class="flickr-photoset-img">'. $img .'</div>';
--    } else {
--      $output .= '<div class="flickr-photoset-img">'. l($img, 'node/'. $node->nid, array('attributes' => array('title' => $title), 'absolute' => TRUE, 'html' => TRUE)) . '</div>';
-+      $output .= '<div class="flickr-photoset-img">' . $img . '</div>';
-+    }
-+    else {
-+      $output .= '<div class="flickr-photoset-img">' . l($img, 'node/' . $node->nid, array('attributes' => array('title' => $title), 'absolute' => TRUE, 'html' => TRUE)) . '</div>';
-     }
- 
-   }
-   $output .= '</div>';
-   $output .= '<div class="flickr-photoset-meta">';
--  $output .= '<p>'. $photo_data['description']['_content'] .'</p>';
--  $output .= '<cite>'. l(t('Source: Flickr'), $photo_url) .'</cite>';
-+  $output .= '<p>' . $photo_data['description']['_content'] . '</p>';
-+  $output .= '<cite>' . l(t('Source: Flickr'), $photo_url) . '</cite>';
-   $output .= '</div>';
-   return $output;
- }
-@@ -394,28 +451,33 @@ function theme_flickrfield_photoset($img, $photo_url, $formatter, $photo_data, $
-  * @param $title title to use for the link
-  * @return unknown_type
-  */
--function theme_flickrfield_photoset_primaryphoto($img, $link, $set_url, $size, $title) {
-+function theme_flickrfield_photoset_primaryphoto($variables) {
-+  $img = $variables['0'];
-+  $link = $variables['1'];
-+  $set_url = $variables['2'];
-+  $size = $variables['3'];
-+  $title = $variables['4'];
-   if ($link) {
--    $output = '<div class="flickr-photoset-img">'. l($img, $link, array('attributes' => array('title' => $title), 'html' => TRUE)) . '</div>';
-+    $output = '<div class="flickr-photoset-img">' . l($img, $link, array('attributes' => array('title' => $title), 'html' => TRUE)) . '</div>';
-   }
-   else {
--    $output = '<div class="flickr-photoset-img">'. $img .'</div>';
-+    $output = '<div class="flickr-photoset-img">' . $img . '</div>';
-   }
--  $output .= '<div class="flickr-citation">'. l(t('Source: Flickr'), $set_url) .'</div>';
-+  $output .= '<div class="flickr-citation">' . l(t('Source: Flickr'), $set_url) . '</div>';
-   return $output;
- }
- 
- /**
-  * Theme for the form element.
-- * 
-+ *
-  * The form is already rendered by the child elements by the time it comes back here,
-  * just group each delta grouping into its own fieldset.
-  */
--function theme_flickrfield($element) {
--  $fields = content_fields();
--  $field = $fields[$element['#field_name']];
-+function theme_flickrfield($variables) {
-+  $element = $variables['0'];
-+  $field = field_info_field($element['#field_name']);
-   $fieldset = array(
--    '#title' => $field['widget']['label'] .' '. ($element['#delta'] > 0 ? intval($element['#delta'] + 1) : ''),
-+    '#title' => $field['widget']['label'] . ' ' . ($element['#delta'] > 0 ? intval($element['#delta'] + 1) : ''),
-     '#value' => $element['#children'],
-     '#collapsible' => FALSE,
-     '#collapsed' => FALSE,
-@@ -431,6 +493,7 @@ function theme_flickrfield($element) {
-  * The textfield is already rendered by the textfield theme
-  * and the html output lives in $element['#children'].
-  */
--function theme_flickrfield_flickrid($element) {
-+function theme_flickrfield_flickrid($variables) {
-+  $element = $variables['0'];
-   return $element['#children'];
- }
diff --git a/README.txt b/README.txt
index 4b99adb..5a7bc98 100644
--- a/README.txt
+++ b/README.txt
@@ -1,37 +1,39 @@
-Name:
-----
-    flickr http://drupal.org/project/flickr
-    (Unfinished/Incomplete)
-
-Requirements:
-------------
-This module requires Drupal 7.X and a Flickr API key.
-
-Overview:
---------
-Flickr adds a filter to allow photos from http://flickr.com to be
-integrated into your site via flickr's API. There are several Flickr blocks
-that you can enable as well.
-
-Installation and configuration:
-------------------------------
-1.) Simply extract the download package in your modules directory, e.g. '/sites/all/modules'.
-2.) Enable the module in 'admin/modules'.
-3.) Configure the API Key '/admin/config/media/flickr'.
-4.) Add the flickr filter to one of your input formats by following
-the configure link 'admin/config/content/formats'.
-5.) Allow permissions '/admin/people/permissions'.
-
-Usage:
-------
-The filter format is: [flickr-photo:id=230452326,size=s] and 
-[flickr-photoset:id=72157594262419167,size=m]
-
-The size parameter can be one of the following:
-  * s - small square 75x75
-  * t - thumbnail, 100 on longest side
-  * m - small, 240 on longest side
-  * - - medium, 500 on longest side
-  * b - large, 1024 on longest side
-  * o - original image
-
+Name:
+----
+    flickr http://drupal.org/project/flickr
+    (Unfinished/Incomplete)
+
+Requirements:
+------------
+This module requires Drupal 7.X and a Flickr API key.
+
+Overview:
+--------
+Flickr adds a filter to allow photos from http://flickr.com to be
+integrated into your site via flickr's API. There are several Flickr blocks
+that you can enable as well.
+
+Installation and configuration:
+------------------------------
+1.) Simply extract the download package in your modules directory, e.g. '/sites/all/modules'.
+2.) Enable the module in 'admin/modules'.
+3.) Configure the API Key '/admin/config/media/flickr'.
+4.) Add the flickr filter to one of your input formats by following
+the configure link 'admin/config/content/formats'.
+5.) Allow permissions '/admin/people/permissions'.
+
+Usage:
+------
+The filter format is: [flickr-photo:id=230452326,size=s] and 
+[flickr-photoset:id=72157594262419167,size=m]
+
+The size parameter can be one of the following:
+  * s - small square 75x75
+  * t - thumbnail, 100 on longest side
+  * q - medium square 150x150
+  * m - small, 240 on longest side
+  * n - small, 320 on longest side
+  * - - medium, 500 on longest side
+  * z - medium, 640 on longest side
+  * b - large, 1024 on longest side
+  * o - original image
diff --git a/filter/flickr_filter.module b/filter/flickr_filter.module
index ece5082..f5d7951 100644
--- a/filter/flickr_filter.module
+++ b/filter/flickr_filter.module
@@ -8,7 +8,7 @@ require_once(drupal_get_path('module', 'flickr') . '/flickr.inc');
 function flickr_filter_info() {
   $filters['filter_flickr'] = array(
     'title' =>  t('Flickr linker'),
-    'description' => t('Allows you to Insert Flickr images: [flickr-photo:id=230452326,size=s] or [flickr-photoset:id=72157594262419167,size=m]'),
+    'description' => t('Allows you to Insert Flickr images: [flickr-photo:id=230452326,size=s] or [flickr-photoset:id=72157594262419167,size=m].'),
     'process callback' => '_filter_flickr',
     'tips callback' => '_filter_flickr_tips',
   );
diff --git a/flickr.admin.inc b/flickr.admin.inc
index af1bc79..79e8c9c 100644
--- a/flickr.admin.inc
+++ b/flickr.admin.inc
@@ -55,6 +55,23 @@ function flickr_admin_settings() {
     ),
     '#description' => t('The number indicates how many photos of a photoset display in your nodes. After saving the configuration, <a href="?q=admin/settings/performance">clear the cache</a>.'),
   );
+  $form['overlay_settings'] = array(
+    '#type' => 'fieldset',
+    '#title' => t('Overlay browser settings'),
+    '#description' => t('Leave empty to link directly to the Flickr photo page instead of opening the bigger version of the image.'),
+  );
+  $form['overlay_settings']['flickr_class'] = array(
+    '#type' => 'textfield',
+    '#title' => t('class'),
+    '#default_value' => variable_get('flickr_class', ''),
+    '#description' => t('E.g.: colorbox'),
+  );
+  $form['overlay_settings']['flickr_rel'] = array(
+    '#type' => 'textfield',
+    '#title' => t('rel'),
+    '#default_value' => variable_get('flickr_rel', ''),
+    '#description' => t('E.g.: gallery-all'),
+  );
   // we need an api key before we can verify usernames
   if (!$form['flickr_api_key']['#default_value']) {
     $form['flickr_default_userid']['#disabled'] = TRUE;
@@ -107,4 +124,3 @@ function flickr_admin_settings_submit($form, &$form_state) {
   // ... and save the settings
   system_settings_form_submit($form, $form_state);
 }
-
diff --git a/flickr.css b/flickr.css
index 38de737..1ca6086 100644
--- a/flickr.css
+++ b/flickr.css
@@ -1,4 +1,3 @@
-
 .flickr-photos {}
 
 .flickr-photo {}
@@ -15,11 +14,9 @@
   height: 260px;
 }
 
-
-
 .flickr-photosets {}
 
-.flickr-photoset {}
+.flickr-photoset span.flickr-wrap{}
 
 .flickr-photoset-img {
   vertical-align: text-bottom;
@@ -36,3 +33,16 @@
 .flickr-photoset-title {}
 
 .flickr-photoset-count {}
+
+span.flickr-wrap {
+  display: inline-block;
+  vertical-align: top;
+  margin: 0 5px 5px 0;
+}
+
+span.flickr-credit {
+  display: block;
+  line-height: 100%;
+  font-size: 80%;
+}
+
diff --git a/flickr.info b/flickr.info
index f5edfe3..9dd8383 100644
--- a/flickr.info
+++ b/flickr.infoundefined
@@ -4,6 +4,7 @@
 core = 7.x
 
 files[] = flickr.module
+stylesheets[all][] = flickr.css
 ; Information added by drupal.org packaging script on 2012-02-10
 version = "7.x-1.x-dev"
 core = "7.x"
diff --git a/flickr.install b/flickr.install
index cc92fa5..fdcc1ea 100644
--- a/flickr.install
+++ b/flickr.install
@@ -10,6 +10,8 @@ function flickr_uninstall() {
   variable_del('flickr_api_secret');
   variable_del('flickr_default_userid');  
   variable_del('flickr_cache_duration');
+  variable_del('flickr_class');
+  variable_del('flickr_rel');
 }
 
 function flickr_schema() {
@@ -37,4 +39,4 @@ function flickr_schema() {
     'primary key' => array('uid'),
   );
   return $schema;
-}
\ No newline at end of file
+}
diff --git a/flickr.module b/flickr.module
index d480fe9..15ae2e3 100644
--- a/flickr.module
+++ b/flickr.module
@@ -124,7 +124,6 @@ function flickr_photos_access($account) {
 }
 
 function flickr_photos($user = NULL) {
-  drupal_add_css(drupal_get_path('module', 'flickr') . '/flickr.css');
 
   global $pager_page_array, $pager_total, $pager_total_items;
   //set this to something else if you want multiple pagers
@@ -256,15 +255,47 @@ function flickr_photos_page_title($user) {
 }
 
 function theme_flickr_photo($variables) {
+  $class = variable_get('flickr_class');
+  $rel = variable_get('flickr_rel');
   $photo = $variables['photo'];
   $size = $variables['size'];
   $format = $variables['format'];
   $attribs = $variables['attribs'];
-  
+  $url = flickr_photo_img($photo, 'z', $format); // For quick opening of the big version images remove the z, using 500px instead of 620px.
+  switch($size) {
+  case 's':
+    $width = '75';
+    break;
+  case 't':
+    $width = '100';
+    break;
+  case 'q':
+    $width = '150';
+    break;
+  case 'm':
+    $width = '240';
+    break;
+  case 'n':
+    $width = '320';
+    break;
+  default:
+    $width = '500';
+  }
   $img = flickr_img($photo, $size, $attribs);
   $photo_url = flickr_photo_page_url($photo['owner'], $photo['id']);
   $title = is_array($photo['title']) ? $photo['title']['_content'] : $photo['title'];
-  return l($img, $photo_url, array('attributes' => array('title' => $title), 'absolute' => TRUE, 'html' => TRUE));
+  if ($size == 's') {
+    $credit = t('Flickr'); // The size is too small to add a title.
+  }
+  else {
+    $credit = $title;
+  }
+  if (variable_get('flickr_class') == NULL && variable_get('flickr_rel') == NULL) {
+    return l($img, $photo_url, array('attributes' => array('title' => $title), 'absolute' => TRUE, 'html' => TRUE));
+  }
+  else {
+    return '<span class="flickr-wrap">' . l($img, $url, array('attributes' => array('title' => $title, 'class' => array($class), 'rel' => $rel), 'absolute' => TRUE, 'html' => TRUE)). '<span class="flickr-credit" style="width: ' . $width . 'px;">' . l($credit, $photo_url, array('attributes' => array('title' => t('View on Flickr. To enlarge click pic.'), 'target' => '_blank'))) . '</span></span>'; //Final step that generates the image with a link to the bigger version and a link to the Flickr page under it to comply with the TOS of Flickr.
+  }
 }
 
 function theme_flickr_photo_box($variables) {
@@ -324,4 +355,4 @@ function theme_flickr_photoset($variables) {
     $title = is_array($photoset['title']) ? $photoset['title']['_content'] : $photoset['title'];   
     return l($img, $photo_url, array('attributes' => array('title' => $title), 'absolute' => TRUE, 'html' => TRUE));
   }
-}
\ No newline at end of file
+}
